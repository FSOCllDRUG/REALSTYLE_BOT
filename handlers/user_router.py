from decimal import Decimal

from aiogram import Router, F  # noqa
from aiogram.filters import CommandStart, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import Message, CallbackQuery, ReplyKeyboardRemove  # noqa

from create_bot import bot, env_admins  # noqa
from filters.is_decimal import IsDecimal
from keyboards.inline import inline_main, inline_categories, inline_cost, get_callback_btns
from keyboards.reply import reply_menu # noqa
from tools.config_manager import get_config_value
from tools.cost_calculation import calculate_cost
from tools.texts import cost_text, manager_msg_url

user_router = Router()


@user_router.message(StateFilter("*"), F.text.casefold() == "–æ—Ç–º–µ–Ω–∞")
async def cancel_fsm(message: Message, state: FSMContext):
    await state.clear()
    photo_id = 'AgACAgIAAxkBAAIDbGb2Am8MuNKnVDEg-ZjGycSiZ5TXAAKo4zEbh86xSywUjO7c1sMIAQADAgADeQADNgQ'
    text = ("–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ!\n\n<b>–Ø –±–æ—Ç –ø–æ–º–æ—â–Ω–∏–∫</b> @realstyle_by\n"
            "–ü–æ–º–æ–≥—É —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Ç–µ–±–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ —Å <b>POIZON</b> –∏ –Ω–µ —Ç–æ–ª—å–∫–æ ü§ñ")
    await message.answer_photo(photo_id, caption=text, reply_markup=await inline_main(message.from_user.id
                                                                                      in env_admins))


@user_router.callback_query(F.data == "nothing")
async def nothing(callback: CallbackQuery):
    await callback.answer("–≠—Ç–æ –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω–∞—è –∫–Ω–æ–ø–æ—à–∫–∞, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞—é")


@user_router.message(CommandStart())
async def cmd_start(message: Message):
    photo_id = 'AgACAgIAAxkBAAIDbGb2Am8MuNKnVDEg-ZjGycSiZ5TXAAKo4zEbh86xSywUjO7c1sMIAQADAgADeQADNgQ'
    text = ("<b>–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –ø–æ–º–æ—â–Ω–∏–∫</b> @realstyle_by\n"
            "–ü–æ–º–æ–≥—É —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Ç–µ–±–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ —Å <b>POIZON</b> –∏ –Ω–µ —Ç–æ–ª—å–∫–æ ü§ñ")
    await message.answer_photo(photo_id, caption=text, reply_markup=ReplyKeyboardRemove())
    await message.answer(
        f"C –º–æ–µ–π –ø–æ–º–æ—â—å—é —Ç—ã –º–æ–∂–µ—à—å:\n"
        f"- –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—É–º–º—É —Å–≤–æ–µ–≥–æ –∑–∞–∫–∞–∑–∞üíµ\n"
        f"- –ü–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ãüßê\n"
        f"- –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–ºüì≤",
        reply_markup=await inline_main(message.from_user.id in env_admins)
    )


@user_router.callback_query(F.data == "menu")
async def main_menu_inline(callback: CallbackQuery, state: FSMContext):
    await callback.answer("")
    await state.clear()
    photo_id = 'AgACAgIAAxkBAAIDbGb2Am8MuNKnVDEg-ZjGycSiZ5TXAAKo4zEbh86xSywUjO7c1sMIAQADAgADeQADNgQ'
    text = ("<b>–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –ø–æ–º–æ—â–Ω–∏–∫</b> @realstyle_by\n"
            "–ü–æ–º–æ–≥—É —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Ç–µ–±–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ —Å <b>POIZON</b> –∏ –Ω–µ —Ç–æ–ª—å–∫–æ ü§ñ")
    await callback.message.answer_photo(photo_id, caption=text, reply_markup=await inline_main(callback.from_user.id
                                                                                               in env_admins))


@user_router.message(F.text == "–ú–µ–Ω—é")
async def main_menu_reply(message: Message, state: FSMContext):
    await state.clear()
    photo_id = 'AgACAgIAAxkBAAIDbGb2Am8MuNKnVDEg-ZjGycSiZ5TXAAKo4zEbh86xSywUjO7c1sMIAQADAgADeQADNgQ'
    text = ("<b>–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –ø–æ–º–æ—â–Ω–∏–∫</b> @realstyle_by\n"
            "–ü–æ–º–æ–≥—É —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Ç–µ–±–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ —Å <b>POIZON</b> –∏ –Ω–µ —Ç–æ–ª—å–∫–æ ü§ñ")
    await message.answer_photo(photo_id, caption=text, reply_markup=await inline_main(message.from_user.id
                                                                                      in env_admins))


class CostCalc(StatesGroup):
    category = State()
    price = State()


@user_router.callback_query(F.data == "calculate_cost")
async def choose_category(callback: CallbackQuery, state: FSMContext):
    await callback.answer("")
    await callback.message.answer("–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=inline_categories)
    await state.set_state(CostCalc.category)


@user_router.callback_query(F.data.in_({"L", "M", "S", "XS", "T"}), StateFilter(CostCalc.category))
async def category_chosen(callback: CallbackQuery, state: FSMContext):
    await callback.answer("")
    await state.update_data(category=callback.data)
    rate = await get_config_value("rate")
    photo_id = 'AgACAgIAAxkBAAIDSGb19ZiQF91MJ8Yip0Xb7zyIaFzZAAKN4zEbh86xSzW2ZcFARwGPAQADAgADeAADNgQ'
    text = (f"–í–≤–µ–¥–∏ —Ü–µ–Ω—É –≤ ¬•(–Æ–∞–Ω—è—Ö), –∞ —è —Ä–∞—Å—Å—á–∏—Ç–∞—é –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å.\n\n"
            f"–ê–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å‚Äî 1¬• = {rate} BYN")
    await callback.message.answer_photo(photo_id, caption=text)
    await state.set_state(CostCalc.price)


@user_router.message(StateFilter(CostCalc.price), IsDecimal())
async def category_price(message: Message, state: FSMContext):
    await state.update_data(price=Decimal(message.text))
    data = await state.get_data()
    price = data.get("price")
    category = data.get("category")
    cost = await calculate_cost(price, category)
    await state.clear()
    await message.answer(f"{await cost_text(cost)}", reply_markup=inline_cost)


@user_router.callback_query(F.data == "in_stock")
async def in_stock(callback: CallbackQuery):
    await callback.answer("")
    photo_id = "AgACAgIAAxkBAAICyWb1rORmEizavfFFqTplw9wBxzw8AAJd4jEbh86xS617MVj75uY1AQADAgADeQADNgQ"
    text = ("<b>–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —Ç–æ–≤–∞—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –∏–º–µ—é—Ç—Å—è –≤ –Ω–∞–ª–∏—á–∏–∏ –Ω–∞ –Ω–∞—à–µ–º —Å–∫–ª–∞–¥–µ.</b> "
            "ü•∞\n\n"
            "–í—Å–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ –Ω–∞–ª–∏—á–∏—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –≤ –Ω–∞—à–µ–º –∏–Ω—Å—Ç–∞–≥—Ä–∞–º–µ\n\n"
            "‚ûñ <b>–¢–æ–≤–∞—Ä—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –≤</b> <i>–∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö ¬´–ù–ê –†–£–ö–ê–•‚úÖ¬ª</i> , <b>–º—ã –∑–∞–∫—É–ø–∞–µ–º –≤ "
            "–ï–≤—Ä–æ–ø–µ –∏ "
            "–ö–∏—Ç–∞–µ.</b>\n"
            "‚ûñ <b>–í—Å–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ –Ω–∞–ª–∏—á–∏—è, –ø—Ä–æ—Ö–æ–¥—è—Ç —Ç—â–∞—Ç–µ–ª—å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∏ "
            "–∫–∞—á–µ—Å—Ç–≤–æ.</b>\n"
            "‚ûñ <b>–î–æ—Å—Ç–∞–≤–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –Ω–∞–ª–∏—á–∏—è, —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç –æ—Ç 2, –¥–æ 5 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π.</b>!")
    await callback.message.answer_photo(photo_id, caption=text, reply_markup=await get_callback_btns(btns={"–ù–ê –†–£–ö–ê–•‚úÖ":
                                                                                                               "https://www.instagram.com/s/aGlnaGxpZ2h0OjE3OTE4MjM3ODY3ODAzMzAx?igsh=MTI4cHo1cHRqemR2OQ",
                                                                                                           "–ù–∞—à "
                                                                                                           "Instagram": "https://www.instagram.com/realstyle_by/",
                                                                                                           "üîô–ù–∞–∑–∞–¥": "menu"}))


@user_router.callback_query(F.data == "discounts")
async def discount(callback: CallbackQuery):
    await callback.answer("")
    await callback.message.answer("<b>–ü–æ—Å—Ç–æ—è–Ω–Ω–∞—è –∞–∫—Ü–∏—è!</b> üòá\n\n"
                                  "<b>–ü—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ 2-—Ö –∏ –±–æ–ª–µ–µ, —Ç–æ–≤–∞—Ä–æ–≤ –∑–∞ –æ–¥–∏–Ω —Ä–∞–∑, —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–∞–∂–¥–æ–≥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ "
                                  "—Ç–æ–≤–∞—Ä–∞ –±—É–¥–µ—Ç –∏–¥—Ç–∏ —Å–æ —Å–∫–∏–¥–∫–æ–π.</b>\n\n"
                                  "üëü –ù–∞ –æ–±—É–≤—å: <b>–ú–∏–Ω—É—Å 20 BYN</b>\n"
                                  "üëñ –ù–∞ —Ç–æ–ª—Å—Ç–æ–≤–∫–∏/—à—Ç–∞–Ω—ã: <b>–ú–∏–Ω—É—Å 15 BYN</b>\n"
                                  "üëï –ù–∞ —Ñ—É—Ç–±–æ–ª–∫–∏/—à–æ—Ä—Ç—ã: <b>–ú–∏–Ω—É—Å 15 BYN</b>\n"
                                  "üß¶ –ù–∞ –Ω–æ—Å–∫–∏/–Ω–∏–∂–Ω–µ–µ –±–µ–ª—å–µ: <b>–ú–∏–Ω—É—Å 5 BYN</b>\n\n"
                                  "<b>–ü—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ 10-—Ç–∏ –ø–æ–∑–∏—Ü–∏–π –∏ –±–æ–ª–µ–µ —Å–∫–∏–¥–∫–∞ –æ–±—Å—É–∂–¥–∞–µ—Ç—Å—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ —Å "
                                  "–º–µ–Ω–µ–¥–∂–µ—Ä–æ–º‚ÄºÔ∏è</b>\n\n"
                                  "–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –º–µ–Ω–µ–¥–∂–µ—Ä—É‚¨áÔ∏è",
                                  reply_markup=await get_callback_btns(btns={"–ú–µ–Ω–µ–¥–∂–µ—Ä": f"{manager_msg_url}",
                                                                             "üîô–ù–∞–∑–∞–¥": "menu"}, sizes=(1,)))


@user_router.callback_query(F.data == "reviews")
async def faq(callback: CallbackQuery):
    await callback.answer("")
    await callback.message.answer("–û—Ç–∑—ã–≤—ã –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤:", reply_markup=await get_callback_btns(
        btns={"–û—Ç–∑—ã–≤—ã": "https://www.instagram.com/s/aGlnaGxpZ2h0OjE3OTY2NDIwNTEwMjEyMjQ0", "üîô–ù–∞–∑–∞–¥": "menu"},
        sizes=(1,)))


@user_router.callback_query(F.data == "faq")
async def faq(callback: CallbackQuery):
    await callback.answer("")
    await callback.message.answer("–£ —Ç–µ–±—è –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –ø–æ —Ä–∞–±–æ—Ç–µ —Å –±–æ—Ç–æ–º?\n"
                                  "–ù–∞ —ç—Ç–æ—Ç —Å–ª—É—á–∞–π —É –Ω–∞—Å –µ—Å—Ç—å —Å–∞–π—Ç —Å–æ —Å—Ç–∞—Ç—å—è–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç —Ç–µ–±–µ.\n\n"
                                  '–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "INFO" –≤ –ª–µ–≤–æ–º –Ω–∏–∂–Ω–µ–º —É–≥–ª—É —ç–∫—Ä–∞–Ω–∞\n'
                                  "‚¨áÔ∏è")

# @user_router.message(F.photo)
# async def get_photo_id(message: Message):
#     photo_id = message.photo[-1].file_id
#     await message.answer(f"id —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏:\n<pre>{photo_id}</pre>")
# AgACAgIAAxkBAAIDSGb19ZiQF91MJ8Yip0Xb7zyIaFzZAAKN4zEbh86xSzW2ZcFARwGPAQADAgADeAADNgQ
